{"version":3,"file":"static/js/145.1d798595.chunk.js","mappings":"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","sources":["api/events.ts","constants/formats.ts","helpers/events.ts","components/Subscriptions/helpers.tsx","webpack://find-the-time-private/./src/components/Subscriptions/components/Interval/Interval.module.scss?a761","components/Subscriptions/components/Interval/Interval.tsx","webpack://find-the-time-private/./src/components/Subscriptions/Subscriptions.module.scss?01da","webpack://find-the-time-private/./src/components/Subscriptions/components/User/User.module.scss?1d93","components/Subscriptions/components/User/User.tsx","components/Subscriptions/Subscriptions.tsx","components/ConfirmationModal/ConfirmationModal.tsx","pages/private/EventDetails/components/Comment/Comment.tsx","pages/private/EventDetails/components/Duration/Duration.tsx","pages/private/EventDetails/components/IntervalChoiceModal/IntervalChoiceModal.tsx","pages/private/EventDetails/components/Location/Location.tsx","pages/private/EventDetails/components/OrganizedBy/OrganizedBy.tsx","pages/private/EventDetails/components/ShareModal/ShareModal.tsx","pages/private/EventDetails/components/Status/helpers.tsx","pages/private/EventDetails/components/Status/Status.tsx","webpack://find-the-time-private/./src/pages/private/EventDetails/EventDetails.module.scss?8ce4","pages/private/EventDetails/components/VisitorAvailabilityModal/constraints.ts","pages/private/EventDetails/components/VisitorAvailabilityModal/VisitorAvailabilityModal.tsx","pages/private/EventDetails/components/VisitorAvailabilityModal/helpers.ts","pages/private/EventDetails/helpers.ts","pages/private/EventDetails/EventDetails.tsx","ui-kit/DatePicker/DatePicker.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport { Guid } from 'types/common';\r\nimport { API_ROOT_PATH } from './constants/path';\r\nimport {\r\n  IEventSearchRequest,\r\n  IEventSearchResponse,\r\n  IEventDetailsResponse,\r\n  IEventCreationRequest,\r\n  IEventCreationResponse,\r\n  IEventSubscriptionRequest,\r\n  IEventIntervalChoiceRequest,\r\n} from './types/events';\r\n\r\nconst baseUrl = `${API_ROOT_PATH}/events`;\r\n\r\nexport const searchEvents = (constraints: IEventSearchRequest) =>\r\n  axios.post<IEventSearchResponse>(`${baseUrl}`, constraints);\r\n\r\nexport const getEventDetails = (id: Guid) =>\r\n  axios.get<IEventDetailsResponse>(`${baseUrl}`, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const createEvent = (details: IEventCreationRequest) =>\r\n  axios.post<IEventCreationResponse>(`${baseUrl}/new`, details);\r\n\r\nexport const subscribeToEvent = (\r\n  id: Guid,\r\n  intervals: IEventSubscriptionRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/subscribe`, intervals, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const unsubscribeFromEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/unsubscribe`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const chooseEventInterval = (\r\n  id: Guid,\r\n  interval: IEventIntervalChoiceRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/choose-interval`, interval, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const removeUserFromEvent = (eventId: Guid, userId: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove-subscription`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: eventId,\r\n        user_id: userId,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const removeEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n","export const DATE_SHORT = 'MMM D';\r\n\r\nexport const TIME_DEFAULT = 'HH:mm';\r\n\r\nexport const DATETIME_DEFAULT = 'YYYY-MM-DD HH:mm:ss';\r\nexport const DATETIME_PICKER = `DD/MM/YYYY ${TIME_DEFAULT}`;\r\n","import dayjs from 'dayjs';\r\nimport { ComponentProps } from 'react';\r\nimport Icon from 'ui-kit/Icon';\r\nimport { IEvent, Role, Status } from 'types/events';\r\nimport { IState } from 'store/slices/account/account';\r\n\r\nexport const getStatus = (chosenInterval: IEvent['chosenInterval']): Status => {\r\n  if (chosenInterval === null) {\r\n    return 'notYetScheduled';\r\n  }\r\n\r\n  return dayjs(chosenInterval.end).isAfter(dayjs()) ? 'pending' : 'past';\r\n};\r\n\r\ntype MappedIcons = { [Key in Status]: ComponentProps<typeof Icon>['type'] };\r\nconst iconsMappedToStatus: MappedIcons = {\r\n  notYetScheduled: 'EditCalendar',\r\n  pending: 'Event',\r\n  past: 'EventAvailable',\r\n};\r\n\r\nexport const getStatusIcon = (status: Status) => iconsMappedToStatus[status];\r\n\r\nexport const getUserRole = (event: IEvent, account: IState): Role => {\r\n  if (event.organizedBy.id === account.id) {\r\n    return 'organizer';\r\n  }\r\n\r\n  if (event.subscriptions.some((entry) => entry.user.id === account.id)) {\r\n    return 'subscriber';\r\n  }\r\n\r\n  return 'visitor';\r\n};\r\n","import { Dayjs } from 'dayjs';\r\nimport Text from 'components/Text';\r\nimport { DATE_SHORT, TIME_DEFAULT } from 'constants/formats';\r\nimport { getIntersection } from 'utilities/intervals';\r\nimport { Guid } from 'types/common';\r\nimport { Subscription } from 'types/events';\r\nimport { Rows } from './types';\r\n\r\nexport const getConstraintText = (constraint: Dayjs, isSmall?: boolean) => {\r\n  const size = isSmall ? 'small' : 'regular';\r\n\r\n  return (\r\n    <>\r\n      <Text size={size}>{constraint.format(DATE_SHORT)}</Text>\r\n      <Text size={size}>{constraint.format(TIME_DEFAULT)}</Text>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const addIntersections = (\r\n  participants: Subscription[],\r\n  visitor?: Subscription\r\n) => {\r\n  const withVisitor = visitor?.availability.length\r\n    ? [...participants, visitor]\r\n    : participants;\r\n\r\n  const availabilities = withVisitor.map(\r\n    (subscription) => subscription.availability\r\n  );\r\n\r\n  const intersections = availabilities.reduce(\r\n    (foundIntersections, intervalsToCheck) => {\r\n      return intervalsToCheck.flatMap((current) => {\r\n        return foundIntersections.flatMap((previous) => {\r\n          const newIntersection = getIntersection(previous, current);\r\n\r\n          return newIntersection !== null ? [newIntersection] : [];\r\n        });\r\n      });\r\n    }\r\n  );\r\n\r\n  return [\r\n    ...withVisitor,\r\n    {\r\n      user: { name: 'All Participants', email: '', id: '' as Guid },\r\n      availability: intersections,\r\n    },\r\n  ];\r\n};\r\n\r\nexport const isFirstRow = (rows: Rows) => rows.current === 0;\r\nexport const isLastRow = (rows: Rows) => rows.current === rows.total - 1;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"Interval_Root__8spB2\",\"Root_color_user\":\"Interval_Root_color_user__AnWQZ\",\"Root_color_current\":\"Interval_Root_color_current__0hoV7\",\"Root_color_all\":\"Interval_Root_color_all__k2shi\",\"Root_picked\":\"Interval_Root_picked__w1UZ9\",\"Details\":\"Interval_Details__VpV7A\",\"Details_shown\":\"Interval_Details_shown__p66xr\",\"Start\":\"Interval_Start__MHPim\",\"End\":\"Interval_End__cbWfa\",\"RangeHighlight\":\"Interval_RangeHighlight__BmQlk\",\"RangeHighlight_shown\":\"Interval_RangeHighlight_shown__GgXMU\",\"IntervalChoiceButtonContainer\":\"Interval_IntervalChoiceButtonContainer__Tfka+\"};","import classNames from 'classnames/bind';\r\nimport { useState } from 'react';\r\nimport IconButton from 'ui-kit/IconButton';\r\nimport { getConstraintText, isLastRow } from 'components/Subscriptions/helpers';\r\nimport { TimeInterval } from 'types/common';\r\nimport { Rows } from '../../types';\r\nimport styles from './Interval.module.scss';\r\n\r\ninterface IProps {\r\n  interval: TimeInterval;\r\n  column: TimeInterval;\r\n  rows: Rows;\r\n  isCurrentUser: boolean;\r\n  onIntervalChoice?: (interval: TimeInterval) => void;\r\n}\r\n\r\nconst ROW_HEIGHT = 58;\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Interval: React.VFC<IProps> = ({\r\n  interval,\r\n  column,\r\n  rows,\r\n  isCurrentUser,\r\n  onIntervalChoice,\r\n}) => {\r\n  const [isPicked, setIsPicked] = useState(false);\r\n\r\n  const { start, end } = interval;\r\n  const { start: min, end: max } = column;\r\n\r\n  const minToMaxDuration = max.diff(min);\r\n\r\n  const beforePercent = (start.diff(min) / minToMaxDuration) * 100;\r\n  const durationPercent = (end.diff(start) / minToMaxDuration) * 100;\r\n\r\n  const isAllParticipants = isLastRow(rows);\r\n\r\n  return (\r\n    <div\r\n      className={cn('Root', {\r\n        Root_picked: isPicked,\r\n        Root_color_user: !isCurrentUser && !isAllParticipants,\r\n        Root_color_current: isCurrentUser,\r\n        Root_color_all: isAllParticipants,\r\n      })}\r\n      style={{\r\n        left: `${beforePercent}%`,\r\n        width: `${durationPercent}%`,\r\n      }}\r\n      onMouseEnter={() => setIsPicked(true)}\r\n      onMouseLeave={() => setIsPicked(false)}\r\n    >\r\n      {isAllParticipants && onIntervalChoice && (\r\n        <div className={styles['IntervalChoiceButtonContainer']}>\r\n          <IconButton\r\n            icon=\"EditCalendar\"\r\n            elementProps={{ onClick: () => onIntervalChoice(interval) }}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={cn('Details', { Details_shown: isPicked })}>\r\n        <div className={styles['Start']}>{getConstraintText(start, true)}</div>\r\n        <div className={styles['End']}>{getConstraintText(end, true)}</div>\r\n      </div>\r\n      <div\r\n        className={cn('RangeHighlight', { RangeHighlight_shown: isPicked })}\r\n        style={{\r\n          top: `-${ROW_HEIGHT * (rows.current + 1)}px`,\r\n          height: `${ROW_HEIGHT * (rows.total + 1)}px`,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Interval;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"Subscriptions_Root__S+z23\",\"UserList\":\"Subscriptions_UserList__95xQC\",\"IntervalList\":\"Subscriptions_IntervalList__8+5JC\",\"Min\":\"Subscriptions_Min__8hfhR\",\"Max\":\"Subscriptions_Max__7CaG8\",\"IntervalHeader\":\"Subscriptions_IntervalHeader__o8Vlp\",\"UserIntervals\":\"Subscriptions_UserIntervals__Ip4R9\",\"AvailabilityPickButtonContainer\":\"Subscriptions_AvailabilityPickButtonContainer__AP4+t\"};","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"User_Root__976IA\",\"Name\":\"User_Name__51agT\"};","import { isFirstRow, isLastRow } from 'components/Subscriptions/helpers';\r\nimport Text from 'components/Text';\r\nimport { getDisplayName } from 'helpers/users';\r\nimport { IUser } from 'types/users';\r\nimport IconButton from 'ui-kit/IconButton';\r\nimport { Rows } from '../../types';\r\nimport styles from './User.module.scss';\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  rows: Rows;\r\n  isCurrent: boolean;\r\n  onRemoval?: (user: IUser) => void;\r\n}\r\n\r\nconst User: React.VFC<IProps> = ({ user, rows, isCurrent, onRemoval }) => {\r\n  const notOrganizer = !isFirstRow(rows);\r\n  const notAllParticipants = !isLastRow(rows);\r\n\r\n  const removalButtonIsShown = notAllParticipants && notOrganizer && onRemoval;\r\n\r\n  const displayName = getDisplayName(user);\r\n\r\n  return (\r\n    <div className={styles['Root']}>\r\n      <p className={styles['Name']} title={displayName}>\r\n        <Text\r\n          font={isCurrent ? 'primaryBold' : 'primary'}\r\n          color={isCurrent ? 'secondary' : 'primary'}\r\n          clamp={1}\r\n        >\r\n          {displayName}\r\n        </Text>\r\n      </p>\r\n      {removalButtonIsShown && (\r\n        <IconButton\r\n          icon=\"Close\"\r\n          elementProps={{ onClick: () => onRemoval(user) }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import IconButton from 'ui-kit/IconButton';\r\nimport { IUser } from 'types/users';\r\nimport { Subscription } from 'types/events';\r\nimport { TimeInterval } from 'types/common';\r\nimport { useAppSelector } from 'store/hooks';\r\nimport Interval from './components/Interval';\r\nimport styles from './Subscriptions.module.scss';\r\nimport User from './components/User';\r\nimport { addIntersections, getConstraintText } from './helpers';\r\n\r\ninterface IProps {\r\n  participants: Subscription[];\r\n  visitor?: Subscription;\r\n  onUserRemoval?: (user: IUser) => void;\r\n  onIntervalChoice?: (interval: TimeInterval) => void;\r\n  onAvailabilityPick?: (constrains: TimeInterval) => void;\r\n}\r\n\r\nconst Subscriptions: React.VFC<IProps> = ({\r\n  participants,\r\n  visitor,\r\n  onUserRemoval,\r\n  onIntervalChoice,\r\n  onAvailabilityPick,\r\n}) => {\r\n  const account = useAppSelector((store) => store.account);\r\n\r\n  const list = addIntersections(participants, visitor);\r\n\r\n  return (\r\n    <div className={styles['Root']}>\r\n      <div className={styles['UserList']}>\r\n        {list.map(({ user }, userIndex) => (\r\n          <User\r\n            key={userIndex}\r\n            user={user}\r\n            rows={{ current: userIndex, total: list.length }}\r\n            isCurrent={user.id === account.id}\r\n            onRemoval={onUserRemoval}\r\n          />\r\n        ))}\r\n      </div>\r\n      {list[0].availability.map(({ start: min, end: max }, columnIndex) => (\r\n        <div\r\n          className={styles['IntervalList']}\r\n          style={{ flexGrow: max.diff(min, 'minutes') }}\r\n          key={columnIndex}\r\n        >\r\n          <div className={styles['IntervalHeader']}>\r\n            <div className={styles['Min']}>{getConstraintText(min)}</div>\r\n            <div className={styles['Max']}>{getConstraintText(max)}</div>\r\n          </div>\r\n          {list.map(({ availability }, rowIndex) => (\r\n            <div className={styles['UserIntervals']} key={rowIndex}>\r\n              {availability\r\n                .filter(\r\n                  ({ start, end }) =>\r\n                    start.isSameOrAfter(min) && end.isSameOrBefore(max)\r\n                )\r\n                .map((interval, intervalIndex) => (\r\n                  <Interval\r\n                    key={intervalIndex}\r\n                    interval={interval}\r\n                    column={{ start: min, end: max }}\r\n                    rows={{ current: rowIndex, total: list.length }}\r\n                    isCurrentUser={list[rowIndex].user.id === account.id}\r\n                    onIntervalChoice={onIntervalChoice}\r\n                  />\r\n                ))}\r\n            </div>\r\n          ))}\r\n          {onAvailabilityPick && (\r\n            <div className={styles['AvailabilityPickButtonContainer']}>\r\n              <IconButton\r\n                icon=\"Add\"\r\n                elementProps={{\r\n                  onClick: () => onAvailabilityPick({ start: min, end: max }),\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Subscriptions;\r\n","import Text from 'components/Text';\r\nimport Modal from 'ui-kit/Modal';\r\n\r\ninterface IProps {\r\n  title?: string;\r\n  action: string;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n  isDangerous?: boolean;\r\n}\r\n\r\nconst ConfirmationModal: React.VFC<IProps> = ({\r\n  title = 'Confirm Action',\r\n  action,\r\n  onConfirm,\r\n  onCancel,\r\n  isDangerous = false,\r\n}) => (\r\n  <Modal\r\n    title={title}\r\n    onOkClick={onConfirm}\r\n    okProps={isDangerous ? { theme: 'danger' } : undefined}\r\n    onCancelClick={onCancel}\r\n  >\r\n    <Text>You are about to {action}. Do you want to proceed?</Text>\r\n  </Modal>\r\n);\r\n\r\nexport default ConfirmationModal;\r\n","import Text from 'components/Text';\r\nimport { IEvent } from 'types/events';\r\nimport InfoTile from 'components/InfoTile';\r\n\r\ninterface IProps extends Pick<IEvent, 'comment'> {}\r\n\r\nconst Comment: React.VFC<IProps> = ({ comment }) => (\r\n  <InfoTile heading=\"Comment\" icon=\"Description\">\r\n    {comment === '' ? (\r\n      <Text font=\"primaryItalic\">No additional info provided</Text>\r\n    ) : (\r\n      <Text>{comment}</Text>\r\n    )}\r\n  </InfoTile>\r\n);\r\n\r\nexport default Comment;\r\n","import dayjs from 'dayjs';\r\nimport Text from 'components/Text';\r\nimport { IEvent } from 'types/events';\r\nimport InfoTile from 'components/InfoTile';\r\n\r\ninterface IProps extends Pick<IEvent, 'duration'> {}\r\n\r\nconst Duration: React.VFC<IProps> = ({ duration }) => (\r\n  <InfoTile heading=\"Duration\" icon=\"Timelapse\">\r\n    <Text>{dayjs.duration(duration, 'minutes').humanize()}</Text>\r\n  </InfoTile>\r\n);\r\n\r\nexport default Duration;\r\n","import { ComponentProps } from 'react';\r\nimport { Dayjs } from 'dayjs';\r\nimport DatePicker from 'ui-kit/DatePicker';\r\nimport Form from 'ui-kit/Form';\r\nimport Input from 'ui-kit/Input';\r\nimport Modal from 'ui-kit/Modal';\r\nimport { DATETIME_PICKER } from 'constants/formats';\r\n\r\ninterface IProps {\r\n  onConfirm: () => Promise<void>;\r\n  onCancel: () => void;\r\n  pickerProps: ComponentProps<typeof DatePicker>;\r\n  eventEnd: Dayjs | null;\r\n}\r\n\r\nconst IntervalChoiceModal: React.VFC<IProps> = ({\r\n  onConfirm,\r\n  onCancel,\r\n  pickerProps,\r\n  eventEnd,\r\n}) => (\r\n  <Modal\r\n    title=\"Choose When Event Happens\"\r\n    onOkClick={onConfirm}\r\n    onCancelClick={onCancel}\r\n  >\r\n    <Form defaultPreventedOnSubmission layout=\"responsive\">\r\n      <Form.Column>\r\n        <Form.Item id=\"start\" label=\"Start\" isRequired>\r\n          <DatePicker {...pickerProps} />\r\n        </Form.Item>\r\n        <Form.Item id=\"end\" label=\"End\">\r\n          <Input placeholder={eventEnd?.format(DATETIME_PICKER)} disabled />\r\n        </Form.Item>\r\n      </Form.Column>\r\n    </Form>\r\n  </Modal>\r\n);\r\n\r\nexport default IntervalChoiceModal;\r\n","import Text from 'components/Text';\r\nimport { IEvent } from 'types/events';\r\nimport InfoTile from 'components/InfoTile';\r\n\r\ninterface IProps extends Pick<IEvent, 'location'> {}\r\n\r\nconst Location: React.VFC<IProps> = ({ location }) => (\r\n  <InfoTile heading=\"Location\" icon=\"LocationOn\">\r\n    <Text>{location}</Text>\r\n  </InfoTile>\r\n);\r\n\r\nexport default Location;\r\n","import Separator from 'ui-kit/Separator';\r\nimport Text from 'components/Text';\r\nimport { getDisplayName } from 'helpers/users';\r\nimport { IEvent } from 'types/events';\r\nimport InfoTile from 'components/InfoTile';\r\n\r\ninterface IProps extends Pick<IEvent, 'organizedBy'> {\r\n  isCurrentUser: boolean;\r\n}\r\n\r\nconst OrganizedBy: React.VFC<IProps> = ({ organizedBy, isCurrentUser }) => (\r\n  <InfoTile heading=\"Organized By\" icon=\"Person\">\r\n    <Text>{getDisplayName(organizedBy)}</Text>\r\n    {isCurrentUser && (\r\n      <>\r\n        <Separator />\r\n        <Text font=\"primaryItalic\" size=\"small\">\r\n          That's you!\r\n        </Text>\r\n      </>\r\n    )}\r\n  </InfoTile>\r\n);\r\n\r\nexport default OrganizedBy;\r\n","import Input from 'ui-kit/Input';\r\nimport Modal from 'ui-kit/Modal';\r\n\r\ninterface IProps {\r\n  onCopy: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst ShareModal: React.VFC<IProps> = ({ onCopy, onCancel }) => {\r\n  const eventUrl = window.location.href;\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Invite Participants\"\r\n      onOkClick={() => {\r\n        navigator.clipboard.writeText(eventUrl);\r\n        onCopy();\r\n      }}\r\n      okText=\"Copy\"\r\n      onCancelClick={onCancel}\r\n    >\r\n      <Input icon=\"Share\" value={eventUrl} />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ShareModal;\r\n","import Text from 'components/Text';\r\nimport Separator from 'ui-kit/Separator';\r\n\r\nexport const getStatusInfo = (primary: string, secondary: string) => (\r\n  <>\r\n    <Text>{primary}</Text>\r\n    <Separator />\r\n    <Text font=\"primaryItalic\" size=\"small\">\r\n      {secondary}\r\n    </Text>\r\n  </>\r\n);\r\n","import dayjs from 'dayjs';\r\nimport { getStatusIcon } from 'helpers/events';\r\nimport { IEvent, Role, Status as StatusType } from 'types/events';\r\nimport InfoTile from 'components/InfoTile';\r\nimport { getStatusInfo } from './helpers';\r\n\r\ninterface IProps extends Pick<IEvent, 'chosenInterval'> {\r\n  role: Role;\r\n  status: StatusType;\r\n}\r\n\r\nconst notYetScheduledByRole = {\r\n  organizer: 'You can pick the time when everyone is subscribed!',\r\n  subscriber: 'The organizer will pick the time when everyone is subscribed!',\r\n  visitor: 'You can subscribe!',\r\n};\r\n\r\nconst Status: React.VFC<IProps> = ({ chosenInterval, role, status }) => {\r\n  const info = {\r\n    notYetScheduled: getStatusInfo(\r\n      'Not scheduled yet',\r\n      notYetScheduledByRole[role]\r\n    ),\r\n    pending: getStatusInfo(\r\n      `Scheduled for ${dayjs(chosenInterval?.start).format('MMM D, YYYY')}`,\r\n      `Will start ${dayjs(chosenInterval?.start).fromNow()}`\r\n    ),\r\n    past: getStatusInfo(\r\n      `Was scheduled for ${dayjs(chosenInterval?.start).format('MMM D, YYYY')}`,\r\n      `Ended ${dayjs(chosenInterval?.end).fromNow()}`\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <InfoTile heading=\"Status\" icon={getStatusIcon(status)}>\r\n      {info[status]}\r\n    </InfoTile>\r\n  );\r\n};\r\n\r\nexport default Status;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Tiles\":\"EventDetails_Tiles__pcM-6\",\"Subscriptions\":\"EventDetails_Subscriptions__Qb-TF\",\"Buttons\":\"EventDetails_Buttons__j+QAp\"};","import { ValidationErrors } from 'initValidatejs';\r\n\r\nconst getConstraints = (duration: number) => ({\r\n  start: {\r\n    startIsBeforeEnd: true,\r\n  },\r\n  end: {\r\n    notShorterThan: { duration },\r\n  },\r\n  intervals: {\r\n    noIntersections: true,\r\n  },\r\n});\r\n\r\nexport type VisitorAvailabilityValidation = ValidationErrors<\r\nReturnType<typeof getConstraints>\r\n>;\r\n\r\nexport default getConstraints;\r\n","import validate from 'validate.js';\r\nimport { Dayjs } from 'dayjs';\r\nimport { useState } from 'react';\r\nimport DatePicker from 'ui-kit/DatePicker';\r\nimport ErrorDisplay from 'ui-kit/ErrorDisplay';\r\nimport Form from 'ui-kit/Form';\r\nimport Modal from 'ui-kit/Modal';\r\nimport { TimeInterval } from 'types/common';\r\nimport { getInitialStart } from './helpers';\r\nimport getValidationConstraints, {\r\n  VisitorAvailabilityValidation,\r\n} from './constraints';\r\n\r\ninterface IProps {\r\n  onConfirm: (availabile: TimeInterval) => void;\r\n  onCancel: () => void;\r\n  constraints: TimeInterval;\r\n  currentAvailabilities: TimeInterval[];\r\n  duration: number;\r\n}\r\n\r\nconst VisitorAvailabilityModal: React.VFC<IProps> = ({\r\n  onConfirm,\r\n  onCancel,\r\n  constraints,\r\n  currentAvailabilities,\r\n  duration,\r\n}) => {\r\n  const [start, setStart] = useState<Dayjs | null>(\r\n    getInitialStart(constraints, currentAvailabilities)\r\n  );\r\n  const [end, setEnd] = useState<Dayjs | null>(constraints.end);\r\n\r\n  const pickedInterval = start && end ? { start, end } : null;\r\n\r\n  const validationattributes = {\r\n    start: pickedInterval,\r\n    end: pickedInterval,\r\n    intervals: [...currentAvailabilities, pickedInterval],\r\n  };\r\n\r\n  const errors: VisitorAvailabilityValidation = pickedInterval\r\n    ? validate(validationattributes, getValidationConstraints(duration))\r\n    : undefined;\r\n\r\n  const handleOkClick = () => {\r\n    if (!pickedInterval || errors) {\r\n      return;\r\n    }\r\n\r\n    onConfirm(pickedInterval);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Choose When You're Available\"\r\n      onOkClick={handleOkClick}\r\n      onCancelClick={onCancel}\r\n    >\r\n      <ErrorDisplay isShown={Boolean(errors?.intervals)}>\r\n        {errors?.intervals || ''}\r\n      </ErrorDisplay>\r\n      <Form defaultPreventedOnSubmission layout=\"responsive\">\r\n        <Form.Column>\r\n          <Form.Item\r\n            id=\"start\"\r\n            label=\"Start\"\r\n            errorMessage={errors?.start}\r\n            isRequired\r\n          >\r\n            <DatePicker\r\n              value={start}\r\n              onChange={setStart}\r\n              constraints={constraints}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item id=\"end\" label=\"End\" errorMessage={errors?.end} isRequired>\r\n            <DatePicker\r\n              value={end}\r\n              onChange={setEnd}\r\n              constraints={constraints}\r\n            />\r\n          </Form.Item>\r\n        </Form.Column>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default VisitorAvailabilityModal;\r\n","import { TimeInterval } from 'types/common';\r\n\r\nexport const getInitialStart = (\r\n  constraints: TimeInterval,\r\n  currentAvailabilities: TimeInterval[]\r\n) => {\r\n  const lastPickedInterval = currentAvailabilities.at(-1);\r\n\r\n  if (!lastPickedInterval) {\r\n    return constraints.start;\r\n  }\r\n\r\n  const afterPreviousPick = lastPickedInterval.end.add(1, 'hour');\r\n\r\n  return afterPreviousPick.isBetween(constraints.start, constraints.end)\r\n    ? afterPreviousPick\r\n    : constraints.start;\r\n};\r\n","import dayjs from 'dayjs';\r\nimport { DATETIME_DEFAULT } from 'constants/formats';\r\nimport { IApiTimeInterval, IEventDetailsResponse } from 'api/types/events';\r\nimport { IEvent } from 'types/events';\r\nimport { TimeInterval } from 'types/common';\r\n\r\nexport const convertToIEvent = (toConvert: IEventDetailsResponse): IEvent => {\r\n  const { subscriptions: subscriptionsRaw, ...rest } = toConvert;\r\n\r\n  const subscriptions = subscriptionsRaw.map(\r\n    ({ user, availability: availabilityRaw }) => {\r\n      const availability = availabilityRaw.map(\r\n        ({ start: startRaw, end: endRaw }) => {\r\n          const start = dayjs(startRaw);\r\n          const end = dayjs(endRaw);\r\n\r\n          return { start, end };\r\n        }\r\n      );\r\n\r\n      return { user, availability };\r\n    }\r\n  );\r\n\r\n  return { subscriptions, ...rest };\r\n};\r\n\r\nexport const convertToIApiTimeIntervalArray = (\r\n  toConvert: TimeInterval[]\r\n): IApiTimeInterval[] =>\r\n  toConvert.map(({ start, end }) => ({\r\n    start: start.format(DATETIME_DEFAULT),\r\n    end: end.format(DATETIME_DEFAULT),\r\n  }));\r\n","import { Dayjs } from 'dayjs';\r\nimport { To, useNavigate, useParams } from 'react-router-dom';\r\nimport { ComponentProps, useCallback, useEffect, useState } from 'react';\r\nimport Button from 'ui-kit/Button';\r\nimport Page from 'ui-kit/Page';\r\nimport Scroll from 'ui-kit/Scroll';\r\nimport Subscriptions from 'components/Subscriptions';\r\nimport { DATETIME_DEFAULT } from 'constants/formats';\r\nimport { getStatus, getUserRole } from 'helpers/events';\r\nimport { Guid, TimeInterval } from 'types/common';\r\nimport { IEvent } from 'types/events';\r\nimport { IUser } from 'types/users';\r\nimport { PARAM, PRIVATE } from 'constants/routes';\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks';\r\nimport { notifyOnNetworkError } from 'store/slices/notifications';\r\nimport {\r\n  chooseEventInterval,\r\n  getEventDetails,\r\n  removeEvent,\r\n  removeUserFromEvent,\r\n  subscribeToEvent,\r\n  unsubscribeFromEvent,\r\n} from 'api/events';\r\nimport ConfirmationModal from 'components/ConfirmationModal';\r\nimport InfoTile from 'components/InfoTile';\r\nimport { LocationState } from '../NotFound';\r\nimport Comment from './components/Comment';\r\nimport Duration from './components/Duration';\r\nimport IntervalChoiceModal from './components/IntervalChoiceModal';\r\nimport Location from './components/Location';\r\nimport OrganizedBy from './components/OrganizedBy';\r\nimport ShareModal from './components/ShareModal';\r\nimport Status from './components/Status';\r\nimport styles from './EventDetails.module.scss';\r\nimport VisitorAvailabilityModal from './components/VisitorAvailabilityModal/VisitorAvailabilityModal';\r\nimport { convertToIApiTimeIntervalArray } from './helpers';\r\nimport { convertToIEvent } from './helpers';\r\n\r\ninterface IProps {\r\n  navigateBackTo: To;\r\n}\r\n\r\nconst notFoundPageConfig: LocationState = {\r\n  title: 'Event Not Found',\r\n  message: 'We couldn’t find this event. Sorry about that.',\r\n  returnUrl: PRIVATE.Events,\r\n  returnButtonText: 'Go to events',\r\n};\r\n\r\nconst EventDetails: React.VFC<IProps> = ({ navigateBackTo }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { eventId } = useParams<PARAM.EventId>();\r\n\r\n  const [details, setDetails] = useState<IEvent>();\r\n  const [isLoading, setIsLoading] = useState<boolean>();\r\n\r\n  const [intervalChoiceModalIsOpen, setIntervalChoiceModalIsOpen] =\r\n    useState(false);\r\n  const [intervalChoiceConstraints, setIntervalChoiceConstraints] =\r\n    useState<TimeInterval>();\r\n  const [eventStart, setEventStart] = useState<Dayjs | null>(null);\r\n  const eventEnd =\r\n    details && eventStart ? eventStart.add(details.duration, 'minutes') : null;\r\n\r\n  const [visitorAvailabilityModalIsOpen, setVisitorAvailabilityModalIsOpen] =\r\n    useState(false);\r\n  const [visitorAvailabilityConstraints, setVisitorAvailabilityConstraints] =\r\n    useState<TimeInterval>();\r\n  const [visitorAvailabilities, setVisitorAvailabilities] = useState<\r\n  TimeInterval[]\r\n  >([]);\r\n\r\n  const [shareModalIsOpen, setShareModalIsOpen] = useState(false);\r\n\r\n  const [confirmationModalProps, setConfirmationModalProps] =\r\n    useState<ComponentProps<typeof ConfirmationModal> | null>(null);\r\n\r\n  const account = useAppSelector((store) => store.account);\r\n\r\n  const role = details ? getUserRole(details, account) : null;\r\n  const status = details ? getStatus(details?.chosenInterval) : null;\r\n\r\n  const fetchDetails = useCallback(async () => {\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await getEventDetails(eventId as Guid);\r\n      const parsed = convertToIEvent(response.data);\r\n\r\n      setDetails(parsed);\r\n\r\n      setIsLoading(false);\r\n    } catch {\r\n      setIsLoading(false);\r\n\r\n      navigate(PRIVATE.NotFound, { state: notFoundPageConfig });\r\n    }\r\n  }, [eventId, navigate]);\r\n\r\n  useEffect(() => {\r\n    fetchDetails();\r\n  }, [fetchDetails]);\r\n\r\n  const handleDeleteConfirmation = async () => {\r\n    setConfirmationModalProps(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await removeEvent(eventId as Guid);\r\n\r\n      setIsLoading(false);\r\n\r\n      navigate(PRIVATE.Events);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n\r\n      dispatch(notifyOnNetworkError('delete the event', error));\r\n    }\r\n  };\r\n\r\n  const handleDeleteButtonClick = () =>\r\n    setConfirmationModalProps({\r\n      title: 'Remove Event',\r\n      action: 'remove this event',\r\n      onConfirm: handleDeleteConfirmation,\r\n      onCancel: () => setConfirmationModalProps(null),\r\n    });\r\n\r\n  const removeUser = async (user: IUser) => {\r\n    setConfirmationModalProps(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await removeUserFromEvent(eventId as Guid, user.id);\r\n\r\n      fetchDetails();\r\n    } catch (error) {\r\n      dispatch(notifyOnNetworkError('remove this user', error));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUserRemoval = (user: IUser) =>\r\n    setConfirmationModalProps({\r\n      title: 'Remove Participant',\r\n      action: 'remove this user from participation in the event',\r\n      onConfirm: () => removeUser(user),\r\n      onCancel: () => setConfirmationModalProps(null),\r\n    });\r\n\r\n  const handleIntervalChoice = ({ start, end }: TimeInterval) => {\r\n    if (!details) {\r\n      return;\r\n    }\r\n\r\n    const constraints = {\r\n      start,\r\n      end: end.subtract(details.duration, 'minutes'),\r\n    };\r\n\r\n    setIntervalChoiceConstraints(constraints);\r\n    setEventStart(constraints.start);\r\n\r\n    setIntervalChoiceModalIsOpen(true);\r\n  };\r\n\r\n  const handleIntervalChoiceModalConfirm = async () => {\r\n    if (!eventStart || !eventEnd) {\r\n      return;\r\n    }\r\n\r\n    const chosenInterval = {\r\n      start: eventStart.format(DATETIME_DEFAULT),\r\n      end: eventEnd.format(DATETIME_DEFAULT),\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await chooseEventInterval(eventId as Guid, { chosenInterval });\r\n\r\n      setIntervalChoiceModalIsOpen(false);\r\n\r\n      fetchDetails();\r\n    } catch (error) {\r\n      dispatch(notifyOnNetworkError('schedule the event', error));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUnsubscribeConfirmation = async () => {\r\n    setConfirmationModalProps(null);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await unsubscribeFromEvent(eventId as Guid);\r\n\r\n      fetchDetails();\r\n    } catch (error) {\r\n      dispatch(notifyOnNetworkError('unsubscribe you', error));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUnsubscribeButtonClick = () =>\r\n    setConfirmationModalProps({\r\n      title: 'Unsubscribe',\r\n      action: 'revoke your participation in this event',\r\n      onConfirm: handleUnsubscribeConfirmation,\r\n      onCancel: () => setConfirmationModalProps(null),\r\n    });\r\n\r\n  const handleVisitorAvailabilityModalConfirm = (availabile: TimeInterval) => {\r\n    setVisitorAvailabilityModalIsOpen(false);\r\n    setVisitorAvailabilities((current) => [...current, availabile]);\r\n  };\r\n\r\n  const handleSubscribeButtonClick = async () => {\r\n    const availableAt = convertToIApiTimeIntervalArray(visitorAvailabilities);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await subscribeToEvent(eventId as Guid, { availableAt });\r\n\r\n      setVisitorAvailabilities([]);\r\n\r\n      fetchDetails();\r\n    } catch (error) {\r\n      dispatch(notifyOnNetworkError('subscribe you', error));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAvailabilityPick = (constrains: TimeInterval) => {\r\n    setVisitorAvailabilityConstraints(constrains);\r\n    setVisitorAvailabilityModalIsOpen(true);\r\n  };\r\n\r\n  const handleClearSelectionButtonClick = () => {\r\n    setVisitorAvailabilities([]);\r\n  };\r\n\r\n  const handleShareButtonClick = () => setShareModalIsOpen(true);\r\n\r\n  const subscribeButtonIsShown =\r\n    role === 'visitor' &&\r\n    status === 'notYetScheduled' &&\r\n    Boolean(visitorAvailabilities.length);\r\n\r\n  const clearSelectionButtonIsShown = subscribeButtonIsShown;\r\n\r\n  const unsubscribeButtonIsShown =\r\n    role === 'subscriber' && status === 'notYetScheduled';\r\n\r\n  const deleteButtonIsShown =\r\n    role === 'organizer' && status === 'notYetScheduled';\r\n\r\n  return (\r\n    <Page\r\n      title={details?.title || ''}\r\n      isLoading={isLoading}\r\n      navigateBackTo={navigateBackTo}\r\n      headerAddon={\r\n        <Button\r\n          leftIcon=\"Share\"\r\n          elementProps={{ onClick: handleShareButtonClick }}\r\n        >\r\n          Share\r\n        </Button>\r\n      }\r\n    >\r\n      {details && role && status && (\r\n        <>\r\n          {intervalChoiceModalIsOpen && (\r\n            <IntervalChoiceModal\r\n              onConfirm={handleIntervalChoiceModalConfirm}\r\n              onCancel={() => setIntervalChoiceModalIsOpen(false)}\r\n              pickerProps={{\r\n                value: eventStart,\r\n                onChange: (value) => setEventStart(value),\r\n                constraints: intervalChoiceConstraints,\r\n              }}\r\n              eventEnd={eventEnd}\r\n            />\r\n          )}\r\n          {visitorAvailabilityConstraints && visitorAvailabilityModalIsOpen && (\r\n            <VisitorAvailabilityModal\r\n              onConfirm={handleVisitorAvailabilityModalConfirm}\r\n              onCancel={() => setVisitorAvailabilityModalIsOpen(false)}\r\n              currentAvailabilities={visitorAvailabilities}\r\n              constraints={visitorAvailabilityConstraints}\r\n              duration={details.duration}\r\n            />\r\n          )}\r\n          {shareModalIsOpen && (\r\n            <ShareModal\r\n              onCopy={() => setShareModalIsOpen(false)}\r\n              onCancel={() => setShareModalIsOpen(false)}\r\n            />\r\n          )}\r\n          {confirmationModalProps && (\r\n            <ConfirmationModal {...confirmationModalProps} isDangerous />\r\n          )}\r\n          <div className={styles['Tiles']}>\r\n            <OrganizedBy\r\n              organizedBy={details.organizedBy}\r\n              isCurrentUser={role === 'organizer'}\r\n            />\r\n            <Location location={details.location} />\r\n            <Duration duration={details.duration} />\r\n            <Status\r\n              chosenInterval={details.chosenInterval}\r\n              role={role}\r\n              status={status}\r\n            />\r\n            <Comment comment={details.comment} />\r\n          </div>\r\n          <div className={styles['Subscriptions']}>\r\n            <InfoTile icon=\"People\" heading=\"Participants\">\r\n              <Scroll axis=\"horizontal\">\r\n                <Subscriptions\r\n                  participants={details.subscriptions}\r\n                  visitor={{\r\n                    user: account,\r\n                    availability: visitorAvailabilities,\r\n                  }}\r\n                  onUserRemoval={\r\n                    role === 'organizer' && status !== 'past'\r\n                      ? handleUserRemoval\r\n                      : undefined\r\n                  }\r\n                  onIntervalChoice={\r\n                    role === 'organizer' && status === 'notYetScheduled'\r\n                      ? handleIntervalChoice\r\n                      : undefined\r\n                  }\r\n                  onAvailabilityPick={\r\n                    role === 'visitor' && status === 'notYetScheduled'\r\n                      ? handleAvailabilityPick\r\n                      : undefined\r\n                  }\r\n                />\r\n              </Scroll>\r\n            </InfoTile>\r\n          </div>\r\n          <div className={styles['Buttons']}>\r\n            {subscribeButtonIsShown && (\r\n              <Button elementProps={{ onClick: handleSubscribeButtonClick }}>\r\n                Subscribe\r\n              </Button>\r\n            )}\r\n            {clearSelectionButtonIsShown && (\r\n              <Button\r\n                elementProps={{ onClick: handleClearSelectionButtonClick }}\r\n                theme=\"secondary\"\r\n              >\r\n                Clear selected\r\n              </Button>\r\n            )}\r\n            {unsubscribeButtonIsShown && (\r\n              <Button\r\n                theme=\"danger\"\r\n                elementProps={{ onClick: handleUnsubscribeButtonClick }}\r\n              >\r\n                Unsubscribe\r\n              </Button>\r\n            )}\r\n            {deleteButtonIsShown && (\r\n              <Button\r\n                theme=\"danger\"\r\n                elementProps={{ onClick: handleDeleteButtonClick }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default EventDetails;\r\n","import { DateTimePicker } from '@mui/x-date-pickers';\r\nimport { Dayjs } from 'dayjs';\r\nimport { useState } from 'react';\r\nimport { TimeInterval } from 'types/common';\r\nimport Input from 'ui-kit/Input';\r\n\r\ninterface IProps {\r\n  id?: string;\r\n  value: Dayjs | null;\r\n  onChange: (date: Dayjs | null) => void;\r\n  constraints?: TimeInterval;\r\n}\r\n\r\nconst DatePicker: React.VFC<IProps> = ({\r\n  id,\r\n  value,\r\n  onChange,\r\n  constraints,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DateTimePicker\r\n      value={value}\r\n      onChange={onChange}\r\n      open={open}\r\n      onOpen={() => setOpen(true)}\r\n      onClose={() => setOpen(false)}\r\n      minDateTime={constraints?.start}\r\n      maxDateTime={constraints?.end}\r\n      renderInput={({ inputRef, inputProps }) => {\r\n        return (\r\n          <Input\r\n            id={id}\r\n            onClick={() => setOpen(true)}\r\n            ref={inputRef}\r\n            {...inputProps}\r\n            readOnly\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n"],"names":["baseUrl","API_ROOT_PATH","searchEvents","constraints","axios","getEventDetails","id","params","event_id","createEvent","details","subscribeToEvent","intervals","unsubscribeFromEvent","chooseEventInterval","interval","removeUserFromEvent","eventId","userId","user_id","removeEvent","DATE_SHORT","TIME_DEFAULT","DATETIME_DEFAULT","DATETIME_PICKER","getStatus","chosenInterval","dayjs","end","isAfter","iconsMappedToStatus","notYetScheduled","pending","past","getStatusIcon","status","getUserRole","event","account","organizedBy","subscriptions","some","entry","user","getConstraintText","constraint","isSmall","size","Text","format","isLastRow","rows","current","total","cn","classNames","styles","column","isCurrentUser","onIntervalChoice","useState","isPicked","setIsPicked","start","min","minToMaxDuration","diff","beforePercent","durationPercent","isAllParticipants","className","Root_picked","Root_color_user","Root_color_current","Root_color_all","style","left","width","onMouseEnter","onMouseLeave","IconButton","icon","elementProps","onClick","Details_shown","RangeHighlight_shown","top","height","isCurrent","onRemoval","notOrganizer","isFirstRow","removalButtonIsShown","displayName","getDisplayName","title","font","color","clamp","participants","visitor","onUserRemoval","onAvailabilityPick","useAppSelector","store","list","withVisitor","availability","length","intersections","map","subscription","reduce","foundIntersections","intervalsToCheck","flatMap","previous","newIntersection","getIntersection","name","email","addIntersections","userIndex","columnIndex","max","flexGrow","rowIndex","filter","isSameOrAfter","isSameOrBefore","intervalIndex","action","onConfirm","onCancel","isDangerous","Modal","onOkClick","okProps","theme","undefined","onCancelClick","comment","InfoTile","heading","duration","humanize","pickerProps","eventEnd","Form","defaultPreventedOnSubmission","layout","label","isRequired","DatePicker","Input","placeholder","disabled","location","Separator","onCopy","eventUrl","window","href","navigator","clipboard","writeText","okText","value","getStatusInfo","primary","secondary","notYetScheduledByRole","organizer","subscriber","role","info","fromNow","startIsBeforeEnd","notShorterThan","noIntersections","currentAvailabilities","lastPickedInterval","at","afterPreviousPick","add","isBetween","getInitialStart","setStart","setEnd","pickedInterval","validationattributes","errors","validate","getValidationConstraints","ErrorDisplay","isShown","Boolean","errorMessage","onChange","convertToIEvent","toConvert","subscriptionsRaw","rest","startRaw","endRaw","notFoundPageConfig","message","returnUrl","PRIVATE","returnButtonText","navigateBackTo","dispatch","useAppDispatch","navigate","useNavigate","useParams","setDetails","isLoading","setIsLoading","intervalChoiceModalIsOpen","setIntervalChoiceModalIsOpen","intervalChoiceConstraints","setIntervalChoiceConstraints","eventStart","setEventStart","visitorAvailabilityModalIsOpen","setVisitorAvailabilityModalIsOpen","visitorAvailabilityConstraints","setVisitorAvailabilityConstraints","visitorAvailabilities","setVisitorAvailabilities","shareModalIsOpen","setShareModalIsOpen","confirmationModalProps","setConfirmationModalProps","fetchDetails","useCallback","response","parsed","data","state","useEffect","handleDeleteConfirmation","notifyOnNetworkError","removeUser","handleIntervalChoiceModalConfirm","handleUnsubscribeConfirmation","handleSubscribeButtonClick","availableAt","subscribeButtonIsShown","clearSelectionButtonIsShown","unsubscribeButtonIsShown","deleteButtonIsShown","Page","headerAddon","Button","leftIcon","availabile","Scroll","axis","subtract","constrains","open","setOpen","DateTimePicker","onOpen","onClose","minDateTime","maxDateTime","renderInput","inputRef","inputProps","ref","readOnly"],"sourceRoot":""}