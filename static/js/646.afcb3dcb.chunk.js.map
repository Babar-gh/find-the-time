{"version":3,"file":"static/js/646.afcb3dcb.chunk.js","mappings":"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","sources":["api/events.ts","helpers/events.ts","webpack://find-the-time-private/./src/pages/private/Events/components/EventTile/EventTile.module.scss?11bf","pages/private/Events/components/EventTile/EventTile.tsx","webpack://find-the-time-private/./src/ui-kit/Switch/Switch.module.scss?16b1","ui-kit/Switch/Switch.tsx","pages/private/Events/components/FilterControls/FilterControls.tsx","webpack://find-the-time-private/./src/pages/private/Events/components/SearchInput/SearchInput.module.scss?bd7b","pages/private/Events/components/SearchInput/SearchInput.tsx","pages/private/Events/components/SortByMenu/SortByMenu.tsx","pages/private/Events/components/SortOrderSwitchButton/SortOrderSwitchButton.tsx","webpack://find-the-time-private/./src/pages/private/Events/Events.module.scss?830d","pages/private/Events/hooks/useEventList/reducer.ts","pages/private/Events/hooks/useEventList/useEventList.ts","pages/private/Events/Events.tsx","types/converters/toClientTypes.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { Guid } from 'types/common';\r\nimport { API_ROOT_PATH } from './constants/path';\r\nimport {\r\n  IEventSearchRequest,\r\n  IEventSearchResponse,\r\n  IEventDetailsResponse,\r\n  IEventCreationRequest,\r\n  IEventCreationResponse,\r\n  IEventSubscriptionRequest,\r\n  IEventIntervalChoiceRequest,\r\n} from './types/events';\r\n\r\nconst baseUrl = `${API_ROOT_PATH}/events`;\r\n\r\nexport const searchEvents = (constraints: IEventSearchRequest) =>\r\n  axios.post<IEventSearchResponse>(`${baseUrl}`, constraints);\r\n\r\nexport const getEventDetails = (id: Guid) =>\r\n  axios.get<IEventDetailsResponse>(`${baseUrl}`, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const createEvent = (details: IEventCreationRequest) =>\r\n  axios.post<IEventCreationResponse>(`${baseUrl}/new`, details);\r\n\r\nexport const subscribeToEvent = (\r\n  id: Guid,\r\n  intervals: IEventSubscriptionRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/subscribe`, intervals, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const unsubscribeFromEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/unsubscribe`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const chooseEventInterval = (\r\n  id: Guid,\r\n  interval: IEventIntervalChoiceRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/choose-interval`, interval, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const removeUserFromEvent = (eventId: Guid, userId: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove-subscription`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: eventId,\r\n        user_id: userId,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const removeEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n","import dayjs from 'dayjs';\r\nimport { ComponentProps } from 'react';\r\nimport Icon from 'ui-kit/Icon';\r\nimport { IEvent, Role, Status } from 'types/events';\r\nimport { IState } from 'store/slices/account/account';\r\n\r\nexport const getStatus = (chosenInterval: IEvent['chosenInterval']): Status => {\r\n  if (chosenInterval === null) {\r\n    return 'notYetScheduled';\r\n  }\r\n\r\n  return chosenInterval.end.isAfter(dayjs()) ? 'pending' : 'past';\r\n};\r\n\r\ntype MappedIcons = { [Key in Status]: ComponentProps<typeof Icon>['type'] };\r\nconst iconsMappedToStatus: MappedIcons = {\r\n  notYetScheduled: 'EditCalendar',\r\n  pending: 'Event',\r\n  past: 'EventAvailable',\r\n};\r\n\r\nexport const getStatusIcon = (status: Status) => iconsMappedToStatus[status];\r\n\r\nexport const getUserRole = (event: IEvent, account: IState): Role => {\r\n  if (event.organizedBy.id === account.id) {\r\n    return 'organizer';\r\n  }\r\n\r\n  if (event.subscriptions.some((entry) => entry.user.id === account.id)) {\r\n    return 'subscriber';\r\n  }\r\n\r\n  return 'visitor';\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"EventTile_Root__kjvQ+\",\"Heading\":\"EventTile_Heading__ewzJ9\",\"SeparatorContainer\":\"EventTile_SeparatorContainer__VYmbU\",\"List\":\"EventTile_List__WNImg\",\"ListItem\":\"EventTile_ListItem__vAa6f\",\"ListItem_color_default\":\"EventTile_ListItem_color_default__Zklcf\",\"ListItem_color_accentPrimary\":\"EventTile_ListItem_color_accentPrimary__1p0Qy\",\"ListItem_color_accentSecondary\":\"EventTile_ListItem_color_accentSecondary__4A8S6\",\"ListItem_color_faded\":\"EventTile_ListItem_color_faded__EOlie\",\"ListItemIconContainer\":\"EventTile_ListItemIconContainer__ITU09\",\"ListItemTextContainer\":\"EventTile_ListItemTextContainer__GfTOG\"};","import classNames from 'classnames/bind';\r\nimport dayjs from 'dayjs';\r\nimport { ComponentProps } from 'react';\r\nimport Text from 'components/Text';\r\nimport Separator from 'ui-kit/Separator';\r\nimport Icon from 'ui-kit/Icon';\r\nimport { getDisplayName } from 'helpers/users';\r\nimport { getStatus, getStatusIcon } from 'helpers/events';\r\nimport { IEvent, Status } from 'types/events';\r\nimport styles from './EventTile.module.scss';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\ntype Color = 'accentPrimary' | 'accentSecondary' | 'faded';\r\ntype MappedColors = { [Key in Status]: Color };\r\n\r\nconst colorsMappedToStatus: MappedColors = {\r\n  notYetScheduled: 'accentPrimary',\r\n  pending: 'accentSecondary',\r\n  past: 'faded',\r\n};\r\n\r\ninterface IListItemProps {\r\n  icon: ComponentProps<typeof Icon>['type'];\r\n  color?: 'default' | Color;\r\n}\r\n\r\nconst ListItem: React.FC<IListItemProps> = ({\r\n  icon,\r\n  color = 'default',\r\n  children,\r\n}) => {\r\n  return (\r\n    <li className={cn('ListItem', `ListItem_color_${color}`)}>\r\n      <div className={styles['ListItemIconContainer']}>\r\n        <Icon isCentered={false} type={icon} />\r\n      </div>\r\n      <p className={styles['ListItemTextContainer']}>{children}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\ninterface IProps extends Omit<IEvent, 'subscriptions'> {}\r\n\r\nconst EventTile: React.VFC<IProps> = ({\r\n  title,\r\n  organizedBy,\r\n  created,\r\n  location,\r\n  comment,\r\n  duration,\r\n  chosenInterval,\r\n}) => {\r\n  const status = getStatus(chosenInterval);\r\n\r\n  return (\r\n    <article className={styles['Root']}>\r\n      <h3 className={styles['Heading']}>\r\n        <Text clamp={1} font=\"primaryBold\" color=\"secondary\">\r\n          {title}\r\n        </Text>\r\n      </h3>\r\n      <ul className={styles['List']}>\r\n        <ListItem icon=\"Person\">\r\n          <Text clamp={1}>{getDisplayName(organizedBy)}</Text>\r\n          <br />\r\n          <Text font=\"primaryItalic\" size=\"small\">\r\n            created {dayjs(created).fromNow()}\r\n          </Text>\r\n        </ListItem>\r\n        <ListItem icon=\"LocationOn\">\r\n          <Text clamp={1}>{location}</Text>\r\n        </ListItem>\r\n        <ListItem icon=\"Description\">\r\n          {comment !== '' ? (\r\n            <Text clamp={3}>{comment}</Text>\r\n          ) : (\r\n            <Text font=\"primaryItalic\">No description</Text>\r\n          )}\r\n        </ListItem>\r\n      </ul>\r\n      <div className={styles['SeparatorContainer']}>\r\n        <Separator theme=\"default\" />\r\n      </div>\r\n      <ul className={styles['List']}>\r\n        <ListItem icon=\"Timelapse\">\r\n          <Text>{`${status === 'past' ? 'Lasted' : 'Will last'} ${dayjs\r\n            .duration(duration, 'minutes')\r\n            .humanize()}`}</Text>\r\n        </ListItem>\r\n        <ListItem\r\n          icon={getStatusIcon(status)}\r\n          color={colorsMappedToStatus[status]}\r\n        >\r\n          {status === 'notYetScheduled' && (\r\n            <Text color=\"inherit\">Not scheduled yet</Text>\r\n          )}\r\n          {status === 'pending' && chosenInterval && (\r\n            <Text color=\"inherit\">\r\n              Scheduled for {chosenInterval.start.format('MMM D')}\r\n            </Text>\r\n          )}\r\n          {status === 'past' && chosenInterval && (\r\n            <Text color=\"inherit\">Ended {chosenInterval.end.fromNow()}</Text>\r\n          )}\r\n        </ListItem>\r\n      </ul>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default EventTile;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"Switch_Root__8C98f\",\"Input\":\"Switch_Input__8hKuq\",\"Track\":\"Switch_Track__mxs1G\",\"Track_checked\":\"Switch_Track_checked__6TuZE\",\"Container\":\"Switch_Container__QAlzR\"};","import classNames from 'classnames/bind';\r\nimport { InputHTMLAttributes } from 'react';\r\nimport Text from 'components/Text';\r\nimport styles from './Switch.module.scss';\r\n\r\ninterface IProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'type'> {\r\n  label?: string;\r\n  labelPosition?: 'left' | 'right';\r\n}\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst Switch: React.VFC<IProps> = ({\r\n  label,\r\n  labelPosition = 'left',\r\n  checked,\r\n  ...rest\r\n}) => {\r\n  const component = (\r\n    <label className={styles['Root']}>\r\n      <div className={cn('Track', { Track_checked: checked })}>\r\n        <input\r\n          className={styles['Input']}\r\n          type=\"checkbox\"\r\n          checked={checked}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    </label>\r\n  );\r\n\r\n  return label ? (\r\n    <label className={styles['Container']}>\r\n      {labelPosition === 'left' && <Text color=\"inherit\">{label}</Text>}\r\n      {component}\r\n      {labelPosition === 'right' && <Text color=\"inherit\">{label}</Text>}\r\n    </label>\r\n  ) : (\r\n    component\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","import Dropdown from 'ui-kit/Dropdown';\r\nimport IconButton from 'ui-kit/IconButton';\r\nimport Menu from 'ui-kit/Menu';\r\nimport Separator from 'ui-kit/Separator';\r\nimport Switch from 'ui-kit/Switch';\r\nimport useBreakpointCheck from 'hooks/useBreakpointCheck';\r\nimport useEventList from '../../hooks/useEventList';\r\n\r\ninterface IProps extends Pick<ReturnType<typeof useEventList>, 'filter'> {\r\n  onFilterChange: ReturnType<typeof useEventList>['applyFilter'];\r\n}\r\n\r\nconst FilterControls: React.VFC<IProps> = ({ filter, onFilterChange }) => {\r\n  const bp = useBreakpointCheck();\r\n  const align = bp('Mobile', 'Tablet') ? 'right' : 'center';\r\n\r\n  const getNonNullableId = (id: typeof filter.status) => id || 'all';\r\n\r\n  const getSelectStatusMenuItem = (id: typeof filter.status, text: string) => {\r\n    const handleMenuItemClick = () => {\r\n      if (id !== filter.status) {\r\n        onFilterChange({ status: id });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Menu.Item\r\n        id={getNonNullableId(id)}\r\n        icon={'Check'}\r\n        iconIsShownOnlyIfSelected\r\n        element=\"HTMLButton\"\r\n        elementProps={{ onClick: handleMenuItemClick }}\r\n      >\r\n        {text}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  const governedByThisControl = [filter.isOrganizer, filter.status];\r\n  const isHighlighted = governedByThisControl.some((filter) => filter !== null);\r\n\r\n  return (\r\n    <Dropdown\r\n      align={align}\r\n      width=\"wide\"\r\n      closeOnClick={false}\r\n      trigger={\r\n        <IconButton\r\n          icon=\"FilterList\"\r\n          isHighlighted={isHighlighted}\r\n          elementProps={{ title: 'Filters' }}\r\n        />\r\n      }\r\n    >\r\n      <Menu selectedId={getNonNullableId(filter.status)}>\r\n        {getSelectStatusMenuItem(null, 'Show all')}\r\n        {getSelectStatusMenuItem('pending', 'Pending')}\r\n        {getSelectStatusMenuItem('past', 'Past')}\r\n      </Menu>\r\n      <Separator theme=\"dropdown\" />\r\n      <Switch\r\n        label=\"Hide created by others\"\r\n        checked={filter.isOrganizer !== null}\r\n        onChange={(e) =>\r\n          onFilterChange({ isOrganizer: e.target.checked || null })\r\n        }\r\n      />\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default FilterControls;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"SearchInput_Root__IO2ud\"};","import { debounce } from 'lodash';\r\nimport { useMemo } from 'react';\r\nimport Input from 'ui-kit/Input';\r\nimport useEventList from '../../hooks/useEventList';\r\nimport styles from './SearchInput.module.scss';\r\n\r\ninterface IProps extends Pick<ReturnType<typeof useEventList>, 'filter'> {\r\n  onFilterChange: ReturnType<typeof useEventList>['applyFilter'];\r\n}\r\n\r\nconst SearchInput: React.VFC<IProps> = ({ filter, onFilterChange }) => {\r\n  const handleSearchChange = useMemo(\r\n    () =>\r\n      debounce((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        if (e.target.value !== filter.title) {\r\n          onFilterChange({ title: e.target.value });\r\n        }\r\n      }, 600),\r\n    [filter.title, onFilterChange]\r\n  );\r\n\r\n  return (\r\n    <div className={styles['Root']}>\r\n      <Input\r\n        theme=\"alternative\"\r\n        icon=\"Search\"\r\n        placeholder=\"Enter event name\"\r\n        onChange={handleSearchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import Dropdown from 'ui-kit/Dropdown';\r\nimport IconButton from 'ui-kit/IconButton';\r\nimport Menu from 'ui-kit/Menu';\r\nimport useBreakpointCheck from 'hooks/useBreakpointCheck';\r\nimport useEventList from '../../hooks/useEventList';\r\n\r\ninterface IProps extends Pick<ReturnType<typeof useEventList>, 'sorter'> {\r\n  onSorterChange: ReturnType<typeof useEventList>['applySorter'];\r\n}\r\n\r\nconst SortByMenu: React.VFC<IProps> = ({ sorter, onSorterChange }) => {\r\n  const bp = useBreakpointCheck();\r\n  const align = bp('Mobile', 'Tablet') ? 'right' : 'center';\r\n\r\n  const getMenuItem = (id: typeof sorter.sortBy, text: string) => {\r\n    const handleMenuItemClick = () => {\r\n      if (id !== sorter.sortBy) {\r\n        onSorterChange({ sortBy: id });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Menu.Item\r\n        id={id}\r\n        icon={'Check'}\r\n        iconIsShownOnlyIfSelected\r\n        element=\"HTMLButton\"\r\n        elementProps={{ onClick: handleMenuItemClick }}\r\n      >\r\n        {text}\r\n      </Menu.Item>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      align={align}\r\n      trigger={\r\n        <IconButton\r\n          icon=\"SortByAlpha\"\r\n          isHighlighted={sorter.sortBy !== 'created'}\r\n          elementProps={{ title: 'Sort by' }}\r\n        />\r\n      }\r\n    >\r\n      <Menu selectedId={sorter.sortBy}>\r\n        {getMenuItem('created', 'Created on')}\r\n        {getMenuItem('chosenInterval', 'Scheduled for')}\r\n        {getMenuItem('subscriptions', 'Possible start')}\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default SortByMenu;\r\n","import IconButton from 'ui-kit/IconButton';\r\nimport useEventList from '../../hooks/useEventList';\r\n\r\ninterface IProps extends Pick<ReturnType<typeof useEventList>, 'sorter'> {\r\n  onSorterChange: ReturnType<typeof useEventList>['applySorter'];\r\n}\r\n\r\nconst SortOrderSwitchButton: React.VFC<IProps> = ({\r\n  sorter,\r\n  onSorterChange,\r\n}) => {\r\n  const icon =\r\n    sorter.direction === 'descending' ? 'ArrowDownward' : 'ArrowUpward';\r\n  const direction =\r\n    sorter.direction === 'descending' ? 'ascending' : 'descending';\r\n\r\n  const handleClick = () => onSorterChange({ direction });\r\n\r\n  return (\r\n    <IconButton\r\n      icon={icon}\r\n      elementProps={{ onClick: handleClick, title: 'Sort direction' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SortOrderSwitchButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Controls\":\"Events_Controls__4R+MV\",\"List\":\"Events_List__z3wNT\",\"ListItem\":\"Events_ListItem__iqSBL\",\"ListItem_loader\":\"Events_ListItem_loader__r4ucv\"};","import { convertToTimeInterval } from 'types/converters/toClientTypes';\r\nimport { Action, IState } from './types';\r\n\r\nexport const reducer = (state: IState, action: Action): IState => {\r\n  switch (action.type) {\r\n    case 'pickNextPage': {\r\n      const loadedItems = (state.pagination.pageNumber + 1) * state.pageSize;\r\n\r\n      if (state.totalItems !== null && loadedItems < state.totalItems) {\r\n        const nextPageNumber = state.pagination.pageNumber + 1;\r\n\r\n        return {\r\n          ...state,\r\n          pagination: {\r\n            ...state.pagination,\r\n            pageNumber: nextPageNumber,\r\n          },\r\n        };\r\n      }\r\n\r\n      return { ...state };\r\n    }\r\n\r\n    case 'applyFilter': {\r\n      return {\r\n        ...state,\r\n        pagination: { ...state.pagination, pageNumber: 0 },\r\n        totalItems: null,\r\n        filter: { ...state.filter, ...action.payload },\r\n      };\r\n    }\r\n\r\n    case 'applySorter': {\r\n      return {\r\n        ...state,\r\n        pagination: { ...state.pagination, pageNumber: 0 },\r\n        totalItems: null,\r\n        sorter: { ...state.sorter, ...action.payload },\r\n      };\r\n    }\r\n\r\n    case 'parseResponse': {\r\n      const newItems = action.payload.items.map(\r\n        ({ chosenInterval: chosenIntervalRaw, ...restRaw }) => ({\r\n          chosenInterval: chosenIntervalRaw\r\n            ? convertToTimeInterval(chosenIntervalRaw)\r\n            : null,\r\n          ...restRaw,\r\n        })\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        totalItems: action.payload.totalItems,\r\n        items:\r\n          state.pagination.pageNumber === 0\r\n            ? [...newItems]\r\n            : [...state.items, ...newItems],\r\n      };\r\n    }\r\n\r\n    case 'setIsLoading': {\r\n      return { ...state, isLoading: action.payload };\r\n    }\r\n  }\r\n};\r\n","import { useEffect, useReducer } from 'react';\r\nimport { IEventSearchRequest } from 'api/types/events';\r\nimport { notifyOnNetworkError } from 'store/slices/notifications';\r\nimport { searchEvents } from 'api/events';\r\nimport { useAppDispatch } from 'store/hooks';\r\nimport { reducer } from './reducer';\r\nimport { IState, Payload } from './types';\r\n\r\nconst useEventList = (pageSize: number) => {\r\n  const appDispatch = useAppDispatch();\r\n\r\n  const initialState: IState = {\r\n    pagination: { pageSize, pageNumber: 0 },\r\n    sorter: {\r\n      sortBy: 'created',\r\n      direction: 'descending',\r\n    },\r\n    filter: {\r\n      isOrganizer: null,\r\n      location: null,\r\n      status: null,\r\n      title: null,\r\n    },\r\n    items: [],\r\n    totalItems: null,\r\n    pageSize,\r\n    isLoading: false,\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const getNextPage = () => dispatch({ type: 'pickNextPage' });\r\n\r\n  const applyFilter = (filter: Payload<'applyFilter'>) =>\r\n    dispatch({ type: 'applyFilter', payload: filter });\r\n\r\n  const applySorter = (sorter: Payload<'applySorter'>) =>\r\n    dispatch({ type: 'applySorter', payload: sorter });\r\n\r\n  const parseResponse = (response: Payload<'parseResponse'>) =>\r\n    dispatch({ type: 'parseResponse', payload: response });\r\n\r\n  const setIsLoading = (isLoading: Payload<'setIsLoading'>) =>\r\n    dispatch({ type: 'setIsLoading', payload: isLoading });\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      setIsLoading(true);\r\n\r\n      const request: IEventSearchRequest = {\r\n        pagination: state.pagination,\r\n        filter: state.filter,\r\n        sorter: state.sorter,\r\n      };\r\n\r\n      try {\r\n        const response = await searchEvents(request);\r\n        parseResponse(response.data);\r\n      } catch (error) {\r\n        appDispatch(notifyOnNetworkError('fetch your events', error));\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [state.pagination, state.filter, state.sorter, appDispatch]);\r\n\r\n  return {\r\n    ...state,\r\n    getNextPage,\r\n    applyFilter,\r\n    applySorter,\r\n  };\r\n};\r\n\r\nexport default useEventList;\r\n","import classNames from 'classnames/bind';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { Suspense } from 'react';\r\nimport Backdrop from 'ui-kit/Backdrop';\r\nimport Button from 'ui-kit/Button';\r\nimport Link from 'ui-kit/Link';\r\nimport Loader from 'ui-kit/Loader';\r\nimport Page from 'ui-kit/Page';\r\nimport useIntersection from 'hooks/useIntersection';\r\nimport { PRIVATE } from 'constants/routes';\r\nimport EventTile from './components/EventTile';\r\nimport FilterControls from './components/FilterControls';\r\nimport SearchInput from './components/SearchInput';\r\nimport SortByMenu from './components/SortByMenu';\r\nimport SortOrderSwitchButton from './components/SortOrderSwitchButton';\r\nimport styles from './Events.module.scss';\r\nimport useEventList from './hooks/useEventList';\r\n\r\nconst cn = classNames.bind(styles);\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nconst Events: React.VFC = () => {\r\n  const list = useEventList(PAGE_SIZE);\r\n\r\n  const filterProps = { filter: list.filter, onFilterChange: list.applyFilter };\r\n  const sorterProps = { sorter: list.sorter, onSorterChange: list.applySorter };\r\n\r\n  const { setSentinelRef } = useIntersection<HTMLElement>(list.getNextPage);\r\n\r\n  const pageIsLoading = list.isLoading && list.pagination.pageNumber === 0;\r\n  const tileIsLoading = list.isLoading && list.pagination.pageNumber > 0;\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<Backdrop isOpen />}>\r\n        <Outlet />\r\n      </Suspense>\r\n      <Page\r\n        title=\"Events\"\r\n        headerAddon={\r\n          <Button\r\n            element=\"Link\"\r\n            elementProps={{ type: 'RouterLink', to: PRIVATE.CreateEvent }}\r\n          >\r\n            Create new event\r\n          </Button>\r\n        }\r\n        isLoading={pageIsLoading}\r\n      >\r\n        <div className={styles['Controls']}>\r\n          <SearchInput {...filterProps} />\r\n          <SortOrderSwitchButton {...sorterProps} />\r\n          <SortByMenu {...sorterProps} />\r\n          <FilterControls {...filterProps} />\r\n        </div>\r\n        <ul className={styles['List']}>\r\n          {list.items.map(({ id, ...rest }, index) => {\r\n            const isLast = list.items.length - 1 === index;\r\n\r\n            return (\r\n              <li\r\n                className={styles['ListItem']}\r\n                key={id}\r\n                ref={isLast ? setSentinelRef : undefined}\r\n              >\r\n                <Link\r\n                  type=\"RouterLink\"\r\n                  to={`${PRIVATE.Events}/${id}`}\r\n                  isWrapper\r\n                >\r\n                  <EventTile id={id} {...rest} />\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n          {tileIsLoading && (\r\n            <Loader isShown={true}>\r\n              <li className={cn('ListItem', 'ListItem_loader')} />\r\n            </Loader>\r\n          )}\r\n        </ul>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import dayjs from 'dayjs';\r\nimport { IEvent } from 'types/events';\r\nimport { IApiTimeInterval, IEventDetailsResponse } from 'api/types/events';\r\nimport { TimeInterval } from 'types/common';\r\n\r\nexport const convertToTimeInterval = ({\r\n  start,\r\n  end,\r\n}: IApiTimeInterval): TimeInterval => ({\r\n  start: dayjs(start),\r\n  end: dayjs(end),\r\n});\r\n\r\nexport const convertToIEvent = (toConvert: IEventDetailsResponse): IEvent => {\r\n  const {\r\n    subscriptions: subscriptionsRaw,\r\n    chosenInterval: chosenIntervalRaw,\r\n    ...rest\r\n  } = toConvert;\r\n\r\n  const subscriptions = subscriptionsRaw.map(\r\n    ({ user, availability: availabilityRaw }) => {\r\n      const availability = availabilityRaw.map((intervalRaw) =>\r\n        convertToTimeInterval(intervalRaw)\r\n      );\r\n\r\n      return { user, availability };\r\n    }\r\n  );\r\n\r\n  const chosenInterval = chosenIntervalRaw\r\n    ? convertToTimeInterval(chosenIntervalRaw)\r\n    : null;\r\n\r\n  return { subscriptions, chosenInterval, ...rest };\r\n};\r\n"],"names":["baseUrl","API_ROOT_PATH","searchEvents","constraints","axios","getEventDetails","id","params","event_id","createEvent","details","subscribeToEvent","intervals","unsubscribeFromEvent","chooseEventInterval","interval","removeUserFromEvent","eventId","userId","user_id","removeEvent","getStatus","chosenInterval","end","isAfter","dayjs","iconsMappedToStatus","notYetScheduled","pending","past","getStatusIcon","status","getUserRole","event","account","organizedBy","subscriptions","some","entry","user","cn","classNames","styles","colorsMappedToStatus","ListItem","icon","color","children","className","Icon","isCentered","type","title","created","location","comment","duration","Text","clamp","font","getDisplayName","size","fromNow","Separator","theme","humanize","start","format","label","labelPosition","checked","rest","component","Track_checked","filter","onFilterChange","align","useBreakpointCheck","bp","getNonNullableId","getSelectStatusMenuItem","text","Menu","iconIsShownOnlyIfSelected","element","elementProps","onClick","isHighlighted","isOrganizer","Dropdown","width","closeOnClick","trigger","IconButton","selectedId","onChange","e","target","handleSearchChange","useMemo","debounce","value","Input","placeholder","sorter","onSorterChange","getMenuItem","sortBy","direction","reducer","state","action","loadedItems","pagination","pageNumber","pageSize","totalItems","nextPageNumber","payload","newItems","items","map","chosenIntervalRaw","restRaw","convertToTimeInterval","isLoading","appDispatch","useAppDispatch","initialState","useReducer","dispatch","parseResponse","response","setIsLoading","useEffect","fetchEvents","request","data","notifyOnNetworkError","getNextPage","applyFilter","applySorter","list","useEventList","filterProps","sorterProps","setSentinelRef","useIntersection","pageIsLoading","tileIsLoading","Suspense","fallback","Backdrop","isOpen","Page","headerAddon","Button","to","PRIVATE","index","isLast","length","ref","undefined","Link","isWrapper","Loader","isShown","convertToIEvent","toConvert","subscriptionsRaw","availability","intervalRaw"],"sourceRoot":""}