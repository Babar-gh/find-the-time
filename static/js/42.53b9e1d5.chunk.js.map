{"version":3,"file":"static/js/42.53b9e1d5.chunk.js","mappings":"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","sources":["api/events.ts","constants/formats.ts","utilities/numbers.ts","webpack://find-the-time-private/./src/pages/private/NewEvent/NewEvent.module.scss?d730","pages/private/NewEvent/constraints.ts","webpack://find-the-time-private/./src/pages/private/NewEvent/components/RangePickerButtons/RangePickerButtons.module.scss?aea0","pages/private/NewEvent/components/RangePickerButtons/RangePickerButtons.tsx","pages/private/NewEvent/helpers.tsx","pages/private/NewEvent/NewEvent.tsx","ui-kit/DatePicker/DatePicker.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport { Guid } from 'types/common';\r\nimport { API_ROOT_PATH } from './constants/path';\r\nimport {\r\n  IEventSearchRequest,\r\n  IEventSearchResponse,\r\n  IEventDetailsResponse,\r\n  IEventCreationRequest,\r\n  IEventCreationResponse,\r\n  IEventSubscriptionRequest,\r\n  IEventIntervalChoiceRequest,\r\n} from './types/events';\r\n\r\nconst baseUrl = `${API_ROOT_PATH}/events`;\r\n\r\nexport const searchEvents = (constraints: IEventSearchRequest) =>\r\n  axios.post<IEventSearchResponse>(`${baseUrl}`, constraints);\r\n\r\nexport const getEventDetails = (id: Guid) =>\r\n  axios.get<IEventDetailsResponse>(`${baseUrl}`, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const createEvent = (details: IEventCreationRequest) =>\r\n  axios.post<IEventCreationResponse>(`${baseUrl}/new`, details);\r\n\r\nexport const subscribeToEvent = (\r\n  id: Guid,\r\n  intervals: IEventSubscriptionRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/subscribe`, intervals, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const unsubscribeFromEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/unsubscribe`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const chooseEventInterval = (\r\n  id: Guid,\r\n  interval: IEventIntervalChoiceRequest\r\n) =>\r\n  axios.post<void>(`${baseUrl}/choose-interval`, interval, {\r\n    params: {\r\n      event_id: id,\r\n    },\r\n  });\r\n\r\nexport const removeUserFromEvent = (eventId: Guid, userId: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove-subscription`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: eventId,\r\n        user_id: userId,\r\n      },\r\n    }\r\n  );\r\n\r\nexport const removeEvent = (id: Guid) =>\r\n  axios.post<void>(\r\n    `${baseUrl}/remove`,\r\n    {},\r\n    {\r\n      params: {\r\n        event_id: id,\r\n      },\r\n    }\r\n  );\r\n","export const DATE_SHORT = 'MMM D';\r\n\r\nexport const TIME_DEFAULT = 'HH:mm';\r\n\r\nexport const DATETIME_DEFAULT = 'YYYY-MM-DD HH:mm:ss';\r\nexport const DATETIME_PICKER = `DD/MM/YYYY ${TIME_DEFAULT}`;\r\n","export const parsePositiveInt = (input: string) => Math.abs(parseInt(input));\r\n\r\nexport const treatNaNAsZero = (number: number) => (isNaN(number) ? 0 : number);\r\n\r\nexport const treatNaNAsEmptyString = (number: number) =>\r\n  isNaN(number) ? '' : number;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"NewEvent_Container__557es\",\"PickerButtons\":\"NewEvent_PickerButtons__0Sc0O\",\"FormErrorDisplay\":\"NewEvent_FormErrorDisplay__7vgTF\",\"FormText\":\"NewEvent_FormText__A4dEz\"};","import { ValidationErrors } from 'initValidatejs';\r\n\r\nexport const constraints = {\r\n  title: {\r\n    length: {\r\n      minimum: 3,\r\n      max: 64,\r\n    },\r\n  },\r\n  location: {\r\n    length: {\r\n      minimum: 3,\r\n      max: 64,\r\n    },\r\n  },\r\n  duration: {\r\n    numericality: {\r\n      greaterThan: 0,\r\n    },\r\n  },\r\n  intervals: {\r\n    noIntersections: true,\r\n  },\r\n};\r\n\r\nexport type NewEventValidation = ValidationErrors<typeof constraints>;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Root\":\"RangePickerButtons_Root__tHteV\"};","import IconButton from 'ui-kit/IconButton';\r\nimport { Interval } from '../../types';\r\nimport styles from './RangePickerButtons.module.scss';\r\n\r\ninterface IProps {\r\n  intervals: Interval[];\r\n  onAddInterval: () => void;\r\n  onRemoveInterval: () => void;\r\n  index: number;\r\n}\r\n\r\nconst RangePickerButtons: React.VFC<IProps> = ({\r\n  intervals,\r\n  onAddInterval,\r\n  onRemoveInterval,\r\n  index,\r\n}) => {\r\n  return (\r\n    <div className={styles['Root']}>\r\n      {intervals.length > 1 && (\r\n        <IconButton\r\n          icon=\"Remove\"\r\n          elementProps={{ onClick: onRemoveInterval }}\r\n        />\r\n      )}\r\n      {index === intervals.length - 1 && (\r\n        <IconButton icon=\"Add\" elementProps={{ onClick: onAddInterval }} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangePickerButtons;\r\n","import validate from 'validate.js';\r\nimport { Dayjs } from 'dayjs';\r\nimport DatePicker from 'ui-kit/DatePicker';\r\nimport RangePickerButtons from './components/RangePickerButtons';\r\nimport { Interval } from './types';\r\n\r\nexport const getRangePickers = (\r\n  index: number,\r\n  intervals: Interval[],\r\n  duration: number,\r\n  someIntervalsAreInvalid: React.MutableRefObject<boolean>,\r\n  getAddIntervalHandler: (index: number) => () => void,\r\n  getRemoveIntervalHandler: (index: number) => () => void,\r\n  getStartPickerChangeHandler: (index: number) => (value: Dayjs | null) => void,\r\n  getEndPickerChangeHandler: (index: number) => (value: Dayjs | null) => void\r\n) => {\r\n  const startError: string | undefined = validate.single(intervals[index], {\r\n    startIsBeforeEnd: true,\r\n  });\r\n\r\n  const endError: string | undefined = validate.single(intervals[index], {\r\n    notShorterThan: { duration },\r\n  });\r\n\r\n  someIntervalsAreInvalid.current = Boolean(startError || endError);\r\n\r\n  const startPicker = (\r\n    <DatePicker\r\n      value={intervals[index].start}\r\n      onChange={getStartPickerChangeHandler(index)}\r\n    />\r\n  );\r\n\r\n  const endPicker = (\r\n    <DatePicker\r\n      value={intervals[index].end}\r\n      onChange={getEndPickerChangeHandler(index)}\r\n    />\r\n  );\r\n\r\n  return [\r\n    {\r\n      formItemProps: {\r\n        label: 'Start',\r\n        errorMessage: startError,\r\n        isRequired: true,\r\n        addons: null,\r\n      },\r\n      picker: startPicker,\r\n    },\r\n    {\r\n      formItemProps: {\r\n        label: 'End',\r\n        errorMessage: endError,\r\n        isRequired: true,\r\n        addons: (\r\n          <RangePickerButtons\r\n            intervals={intervals}\r\n            onAddInterval={getAddIntervalHandler(index)}\r\n            onRemoveInterval={getRemoveIntervalHandler(index)}\r\n            index={index}\r\n          />\r\n        ),\r\n      },\r\n      picker: endPicker,\r\n    },\r\n  ];\r\n};\r\n","import dayjs, { Dayjs } from 'dayjs';\r\nimport validate from 'validate.js';\r\nimport { MouseEventHandler, useRef, useState } from 'react';\r\nimport { uniqueId } from 'lodash';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ErrorDisplay from 'ui-kit/ErrorDisplay';\r\nimport Form from 'ui-kit/Form';\r\nimport InfoDisplay from 'ui-kit/InfoDisplay';\r\nimport Input from 'ui-kit/Input';\r\nimport Loader from 'ui-kit/Loader';\r\nimport Modal from 'ui-kit/Modal';\r\nimport { createEvent } from 'api/events';\r\nimport { DATETIME_DEFAULT } from 'constants/formats';\r\nimport { PRIVATE } from 'constants/routes';\r\nimport {\r\n  parsePositiveInt,\r\n  treatNaNAsEmptyString,\r\n  treatNaNAsZero,\r\n} from 'utilities/numbers';\r\nimport styles from './NewEvent.module.scss';\r\nimport { constraints, NewEventValidation } from './constraints';\r\nimport { getRangePickers } from './helpers';\r\nimport { Interval } from './types';\r\n\r\nconst parseIntervalsForRequest = (intervals: Interval[]) =>\r\n  intervals.map(({ start, end }) => ({\r\n    start: start.format(DATETIME_DEFAULT),\r\n    end: end.format(DATETIME_DEFAULT),\r\n  }));\r\n\r\nconst NewEvent: React.VFC = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [submitHasFailed, setSubmitHasFailed] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [titleIsTouched, setTitleIsTouched] = useState(false);\r\n\r\n  const [location, setLocation] = useState('');\r\n  const [locationIsTouched, setLocationIsTouched] = useState(false);\r\n\r\n  const [description, setDescription] = useState('');\r\n\r\n  const [hrs, setHrs] = useState<number>(0);\r\n  const [mins, setMins] = useState<number>(30);\r\n  const duration = treatNaNAsZero(hrs) * 60 + treatNaNAsZero(mins);\r\n  const [durationIsTouched, setDurationIsTouched] = useState(false);\r\n\r\n  const [intervals, setIntervals] = useState<Interval[]>([\r\n    {\r\n      start: dayjs().add(1, 'hour'),\r\n      end: dayjs().add(3, 'hour'),\r\n      key: uniqueId(),\r\n    },\r\n  ]);\r\n\r\n  const errors: NewEventValidation = validate(\r\n    { title, location, duration, intervals },\r\n    constraints\r\n  );\r\n\r\n  const someIntervalsAreInvalid = useRef(true);\r\n\r\n  const getAddIntervalHandler = (index: number) => () => {\r\n    setIntervals((current) => {\r\n      const updated = [...current];\r\n      updated.push({\r\n        start: dayjs(current[index].start).add(1, 'day'),\r\n        end: dayjs(current[index].end).add(1, 'day'),\r\n        key: uniqueId(),\r\n      });\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const getRemoveIntervalHandler = (index: number) => () => {\r\n    setIntervals((current) => {\r\n      const updated = [...current];\r\n      updated.splice(index, 1);\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const getStartPickerChangeHandler =\r\n    (index: number) => (value: Dayjs | null) => {\r\n      if (value) {\r\n        setIntervals((current) => {\r\n          const updated = [...current];\r\n          updated[index].start = value;\r\n\r\n          return updated;\r\n        });\r\n      }\r\n    };\r\n\r\n  const getEndPickerChangeHandler =\r\n    (index: number) => (value: Dayjs | null) => {\r\n      if (value) {\r\n        setIntervals((current) => {\r\n          const updated = [...current];\r\n          updated[index].end = value;\r\n\r\n          return updated;\r\n        });\r\n      }\r\n    };\r\n\r\n  const handleOkClick: MouseEventHandler = async (_e) => {\r\n    if (errors || someIntervalsAreInvalid.current) {\r\n      setTitleIsTouched(true);\r\n      setLocationIsTouched(true);\r\n\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await createEvent({\r\n        title,\r\n        location,\r\n        comment: description,\r\n        duration,\r\n        initialIntervals: parseIntervalsForRequest(intervals),\r\n      });\r\n\r\n      setIsLoading(false);\r\n      setSubmitHasFailed(false);\r\n\r\n      navigate(`${PRIVATE.Events}/${response.data.id}`);\r\n    } catch {\r\n      setIsLoading(false);\r\n      setSubmitHasFailed(true);\r\n    }\r\n  };\r\n\r\n  const returnToPage = () => navigate(PRIVATE.Events);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Create a New Event\"\r\n      onOkClick={handleOkClick}\r\n      okText=\"Create\"\r\n      onCancelClick={returnToPage}\r\n    >\r\n      <Loader isShown={isLoading}>\r\n        <div className={styles['Container']}>\r\n          <Form defaultPreventedOnSubmission layout=\"responsive\">\r\n            <Form.Column>\r\n              <Form.CustomItem>\r\n                <div className={styles['FormErrorDisplay']}>\r\n                  <ErrorDisplay isShown={submitHasFailed}>\r\n                    Something went wrong! You can try again.\r\n                  </ErrorDisplay>\r\n                </div>\r\n              </Form.CustomItem>\r\n              <Form.Item\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                errorMessage={titleIsTouched ? errors?.title : undefined}\r\n                isRequired\r\n              >\r\n                <Input\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                  onBlur={(e) => {\r\n                    if (e.target.value !== '') {\r\n                      setTitleIsTouched(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                errorMessage={locationIsTouched ? errors?.location : undefined}\r\n                isRequired\r\n              >\r\n                <Input\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                  onBlur={(e) => {\r\n                    if (e.target.value !== '') {\r\n                      setLocationIsTouched(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item id=\"description\" label=\"Description\">\r\n                <Input\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </Form.Item>\r\n              <Form.CustomItem>\r\n                <div className={styles['FormErrorDisplay']}>\r\n                  <ErrorDisplay\r\n                    isShown={durationIsTouched && Boolean(errors?.duration)}\r\n                  >\r\n                    {errors?.duration!}\r\n                  </ErrorDisplay>\r\n                </div>\r\n              </Form.CustomItem>\r\n              <Form.Row>\r\n                <Form.Item id=\"hours\" label=\"Hours\" isRequired>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    value={treatNaNAsEmptyString(hrs)}\r\n                    onChange={(e) => setHrs(parsePositiveInt(e.target.value))}\r\n                    onBlur={() => {\r\n                      setHrs((input) => treatNaNAsZero(input));\r\n                      setDurationIsTouched(true);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item id=\"minutes\" label=\"Minutes\" isRequired>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"60\"\r\n                    value={treatNaNAsEmptyString(mins)}\r\n                    onChange={(e) => setMins(parsePositiveInt(e.target.value))}\r\n                    onBlur={() => {\r\n                      setMins((input) => {\r\n                        if (input > 60) {\r\n                          setHrs((hrs) => hrs + Math.floor(input / 60));\r\n\r\n                          return input % 60;\r\n                        }\r\n\r\n                        return treatNaNAsZero(input);\r\n                      });\r\n\r\n                      setDurationIsTouched(true);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Form.Row>\r\n              <Form.CustomItem>\r\n                <div className={styles['FormText']}>\r\n                  <InfoDisplay>\r\n                    {[\r\n                      'Pick the time intervals in which your event can possibly take place.',\r\n                      'Participants will be able to narrow down these intervals depending on their availability.',\r\n                    ]}\r\n                  </InfoDisplay>\r\n                </div>\r\n              </Form.CustomItem>\r\n              <Form.CustomItem>\r\n                <div className={styles['FormErrorDisplay']}>\r\n                  <ErrorDisplay isShown={Boolean(errors?.intervals)}>\r\n                    {errors?.intervals!}\r\n                  </ErrorDisplay>\r\n                </div>\r\n              </Form.CustomItem>\r\n              {intervals.map((_, intervalIndex) => (\r\n                <Form.Row key={intervals[intervalIndex].key}>\r\n                  {getRangePickers(\r\n                    intervalIndex,\r\n                    intervals,\r\n                    duration,\r\n                    someIntervalsAreInvalid,\r\n                    getAddIntervalHandler,\r\n                    getRemoveIntervalHandler,\r\n                    getStartPickerChangeHandler,\r\n                    getEndPickerChangeHandler\r\n                  ).map(({ formItemProps, picker }, pickerIndex) => (\r\n                    <Form.Item\r\n                      {...formItemProps}\r\n                      key={pickerIndex}\r\n                      id={`picker-${intervalIndex}-${pickerIndex}`}\r\n                    >\r\n                      {picker}\r\n                    </Form.Item>\r\n                  ))}\r\n                </Form.Row>\r\n              ))}\r\n            </Form.Column>\r\n          </Form>\r\n        </div>\r\n      </Loader>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewEvent;\r\n","import { DateTimePicker } from '@mui/x-date-pickers';\r\nimport { Dayjs } from 'dayjs';\r\nimport { useState } from 'react';\r\nimport { TimeInterval } from 'types/common';\r\nimport Input from 'ui-kit/Input';\r\n\r\ninterface IProps {\r\n  id?: string;\r\n  value: Dayjs | null;\r\n  onChange: (date: Dayjs | null) => void;\r\n  constraints?: TimeInterval;\r\n}\r\n\r\nconst DatePicker: React.VFC<IProps> = ({\r\n  id,\r\n  value,\r\n  onChange,\r\n  constraints,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <DateTimePicker\r\n      value={value}\r\n      onChange={onChange}\r\n      open={open}\r\n      onOpen={() => setOpen(true)}\r\n      onClose={() => setOpen(false)}\r\n      minDateTime={constraints?.start}\r\n      maxDateTime={constraints?.end}\r\n      renderInput={({ inputRef, inputProps }) => {\r\n        return (\r\n          <Input\r\n            id={id}\r\n            onClick={() => setOpen(true)}\r\n            ref={inputRef}\r\n            {...inputProps}\r\n            readOnly\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n"],"names":["baseUrl","API_ROOT_PATH","searchEvents","constraints","axios","getEventDetails","id","params","event_id","createEvent","details","subscribeToEvent","intervals","unsubscribeFromEvent","chooseEventInterval","interval","removeUserFromEvent","eventId","userId","user_id","removeEvent","DATE_SHORT","TIME_DEFAULT","DATETIME_DEFAULT","DATETIME_PICKER","parsePositiveInt","input","Math","abs","parseInt","treatNaNAsZero","number","isNaN","treatNaNAsEmptyString","title","length","minimum","max","location","duration","numericality","greaterThan","noIntersections","onAddInterval","onRemoveInterval","index","className","styles","IconButton","icon","elementProps","onClick","getRangePickers","someIntervalsAreInvalid","getAddIntervalHandler","getRemoveIntervalHandler","getStartPickerChangeHandler","getEndPickerChangeHandler","startError","validate","startIsBeforeEnd","endError","notShorterThan","current","Boolean","startPicker","DatePicker","value","start","onChange","endPicker","end","formItemProps","label","errorMessage","isRequired","addons","picker","parseIntervalsForRequest","map","format","navigate","useNavigate","useState","submitHasFailed","setSubmitHasFailed","isLoading","setIsLoading","setTitle","titleIsTouched","setTitleIsTouched","setLocation","locationIsTouched","setLocationIsTouched","description","setDescription","hrs","setHrs","mins","setMins","durationIsTouched","setDurationIsTouched","dayjs","add","key","uniqueId","setIntervals","errors","useRef","updated","push","splice","handleOkClick","_e","comment","initialIntervals","response","PRIVATE","data","Modal","onOkClick","okText","onCancelClick","Loader","isShown","Form","defaultPreventedOnSubmission","layout","ErrorDisplay","undefined","Input","e","target","onBlur","type","min","floor","InfoDisplay","_","intervalIndex","pickerIndex","open","setOpen","DateTimePicker","onOpen","onClose","minDateTime","maxDateTime","renderInput","inputRef","inputProps","ref","readOnly"],"sourceRoot":""}